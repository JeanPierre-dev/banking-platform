openapi: 3.0.3
info:
  title: Customer service
  description: |-
    This is a sample 
  version: 1.0.0
  
servers:
  - url: http://localhost:8070/api/v1
  
tags:
  - name: Customer
    description: Everything about customers
    
    
    
paths:
  /customer:
    post:
      tags:
        - Customer
      summary: Add a new customer to the Data base.
      description: Add a new customer to Data base.
      operationId: addCustomer
      requestBody:
        description: Create a new customer in the Data base.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - Customer
      summary: Returns all customers.
      description: Returns all customers.
      operationId: getAllCustomers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer not found
      
  /customer/{id}:
    put:
      tags:
        - Customer
      summary: Update an existing customer.
      description: Update an existing customer by Id.
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          description: ID of customer to update
          required: true
          schema:
            type: long
      requestBody:
        description: Update an existent customer in Data base.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
    get:
      tags:
        - Customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          description: ID of customer to return
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        "400":
          description: Invalid ID supplied
        "404":
          description: Customer not found
    delete:
      tags:
        - Customer
      summary: Delete a customer
      description: delete a customer
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: Customer id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "400":
          description: Invalid customer value
  

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userName:
          type: string
          example: Luis Olaya CÃ³rdova
        email:
          type: string
          example: lolayaco@nttdata.com
        status:
          type: string
          description: Status user in platform
          example: enabled
          enum:
            - enabled
            - disabled
            - blocked
      xml:
        name: Customer
    Response:
      type: object
      additionalProperties:
        type: object
  
  requestBodies:
    Customer:
      description: Customer object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
        application/xml:
          schema:
            $ref: '#/components/schemas/Customer'