openapi: 3.0.3
info:
  title: Account service
  description: |-
    Account service
  version: 1.0.0
  
servers:
  - url: http://localhost:8070/api/v1
  
tags:
  - name: Account
    description: Everything about bank accounts
    
    
paths:
  /accounts:
    post:
      tags:
        - Account
      summary: Add a new customer to the Data base.
      description: Add a new customer to Data base.
      operationId: addAccount
      requestBody:
        description: Create a new account in the Data base.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBank'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountBank'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountBank'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - Account
      summary: Returns all bank accounts.
      description: Returns all bank accounts.
      operationId: getAllAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBank'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBank'
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found
      
  /accounts/{id}:
    put:
      tags:
        - Account
      summary: Update an existing customer.
      description: Update an existing customer by Id.
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          description: ID of customer to update
          required: true
          schema:
            type: long
      requestBody:
        description: Update an existent customer in Data base.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBank'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountBank'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '422':
          description: Validation exception
    get:
      tags:
        - Account
      summary: Find account by ID
      description: Returns a single account
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          description: ID of customer to return
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBank'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountBank'
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found
    delete:
      tags:
        - Account
      summary: Delete a account
      description: delete a account
      operationId: deleteAccount
      parameters:
        - name: id
          in: path
          description: Account id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "400":
          description: Invalid customer value
  
  /accounts/byCustomer/{id}:
    get:
      tags:
        - Account
      summary: Find accounts by Customer Id
      description: Returns a accounts of customer
      operationId: getAccountByCustomerId
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBank'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBank'
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found


components:
  schemas:
    AccountBank:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        amount:
          type: number
          format: double
          example: 1000.50
        customerId :
          type: integer
          format: int64
          example: 20
        accountType :
          type: string
          description: Type of account
          example: personal
          enum:
            - personal
            - business
        holdersId :
          type: array
          description: Holders of account.
          example: [20]
          items:
            type: integer
        signatoriesId :
          type: array
          description: Signatories of account.
          example: [20]
          items:
            type: integer
        conditions:
          $ref: '#/components/schemas/Conditions'
      xml:
        name: Account
    Conditions:
      type: object
      properties:
        monthlyMovements:
          $ref: '#/components/schemas/MonthlyMovements'
        fee:
          $ref: '#/components/schemas/Fee'
    MonthlyMovements:
      type: object
      properties:
        limit:
          type: integer
          format: int64
          example: 1
        counter:
          type: integer
          format: int64
          example: 2
    Fee:
      type: object
      properties:
        enabled:
          type: boolean
          example: true   
        amount:
          type: number
          format: double
          example: 25.0  
   
    Response:
      type: object
      additionalProperties:
        type: object
      
  requestBodies:
    Account:
      description: Account object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBank'
        application/xml:
          schema:
            $ref: '#/components/schemas/AccountBank'